# Git and GitHub

## Version-control and Git

* Version control: general concept and its usefulness  
* Git software (installation check, but preferably done before)

## GitHub

* GitHub: creating a user  
* Introduction to workflows: local and on web browser  
* Introduction to Markdown (GitHub-flavoured)  
* Best practices and conventional files:  
  * Folders:   
    * `source` or `src` (source code)  
    * `doc` or `docs` (documentation)  
  * Version tags  
  * Files:  
    * README.md: Provides an overview of the project, including what it does, how to set it up, and how to contribute. A few sections examples are:  
      * General description  
      * Authors and/or contributors  
      * Acknowledgments  
      * Funding  
      * Installation or use instructions  
      * Contributing  
    * LICENSE: Specifies the terms under which the code can be used, modified, and distributed.  
    * CITATION.cff: human- and machine-readable citation information for software (and datasets). See example [here](https://citation-file-format.github.io/#:~:text=cff%20file%3F-,CITATION.,to%20correctly%20cite%20their%20software.).  
    * .gitignore: Lists files and directories that Git should ignore, such as build outputs and temporary files.  
    * CHANGELOG.md: Logs a chronological record of all notable changes made to the project, often following conventions like Conventional Commits.  
    * References.bib: one or more files containing references cited within the markdown files of the repository.  
* Releases and GitHub-Zenodo connection

## Hands-on Practice

* Task 1: create your own repository in GitHub. Add files, change files, commit (online). Edit your README file and create other conventional files.  
* Task 2: fork our repository, clone, modify, commit, pull request back to ours (online)  
* Task 3: Set up a local workflow and clone your fork. Modify a file and commit. Push into your fork in GitHub. Create a pull request to merge it with ours.  
* Task 4: Setting up the GitHub-Zenodo connection. Publishing your repository and updating it with its DOI.
